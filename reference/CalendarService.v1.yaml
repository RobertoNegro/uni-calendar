openapi: 3.0.0
info:
  title: CalendarService
  version: '1.0'
  description: ''
servers:
  - url: 'http://localhost:8082'
paths:
  /events:
    parameters: []
    get:
      summary: List of Events
      tags: []
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
              examples: {}
      operationId: get-events
      description: Retrieve the list of events
      parameters: []
      security:
        - JWT Token: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                from:
                  type: number
                  description: Timestamp of starting date
                to:
                  type: number
                  description: Timestamp of ending date
                limit:
                  type: number
                  description: Limit the results to a specific amount
                skip:
                  type: number
                  description: Skip the first N elements
  '/event/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of the event
    get:
      summary: Get Event by ID
      operationId: get-event-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      description: Get the event details by its ID
      security:
        - JWT Token: []
    put:
      summary: Update Event by ID
      operationId: put-event-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      description: Update event by ID
      security:
        - JWT Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreation'
    delete:
      summary: Delete Event by ID
      operationId: delete-event-id
      responses:
        '200':
          description: OK
      description: Delete event by ID
  /event:
    post:
      summary: Create a new event
      operationId: post-event
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/xml:
            schema:
              $ref: '#/components/schemas/EventCreation'
      security:
        - JWT Token: []
components:
  schemas:
    Event:
      description: ''
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
        startTime:
          type: number
        endTime:
          type: number
        url:
          type: string
        location:
          type: string
        partecipants:
          type: array
          description: 'Foreign key: User ID'
          items:
            type: number
        attended:
          type: boolean
        asynchronous:
          type: boolean
        university:
          type: string
        course:
          type: string
      required:
        - id
        - name
        - startTime
        - endTime
        - partecipants
        - university
        - course
    EventCreation:
      description: ''
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        startTime:
          type: number
        endTime:
          type: number
        url:
          type: string
        location:
          type: string
        partecipants:
          type: array
          description: 'Foreign key: User ID'
          items:
            type: number
        attended:
          type: boolean
        asynchronous:
          type: boolean
        university:
          type: string
        course:
          type: string
      required:
        - name
        - startTime
        - endTime
        - partecipants
        - university
        - course
  securitySchemes:
    JWT Token:
      type: oauth2
      description: ''
security:
  - API Key - 1: []
